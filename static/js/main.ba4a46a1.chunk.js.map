{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.module.css","components/notification/Notification.module.css","components/app/App.module.css","components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","components/app/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","css","ontainer","map","btnName","type","btn","onClick","Notification","message","text","Section","children","title","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","prototype","PropTypes","number","isRequired","App","state","getStateTotalValue","Object","values","reduce","acc","value","Math","round","event","currentStateKey","currentTarget","textContent","toLowerCase","setState","prevState","stateKeysForBtn","keys","this","totalValue","card","Component","ReactDOM","render","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,oBCAvED,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,oB,0LC2BVC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,sBAAKC,UAAWC,IAAIC,SAApB,UACG,IACAJ,EAAQK,KAAI,SAACC,GACZ,OACE,wBACEC,KAAK,SAELL,UAAWC,IAAIK,IACfC,QAASR,EAJX,SAMGK,GAJIA,U,gBCDFI,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGT,UAAWC,IAAIS,KAAlB,SAAyBD,KCchDE,G,MAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,oCACE,6BAAKA,EAAMC,gBACVF,O,gBCLDG,G,MAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKpB,UAAU,YAAf,UACE,uCAAUgB,EAAV,OACA,0CAAaC,EAAb,QACA,sCAASC,EAAT,QACA,wCAAWC,EAAX,QACA,oDAAuBC,EAAvB,aAKNL,EAAWM,UAAY,CACrBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBJ,mBAAoBE,IAAUC,OAAOC,YAGxBT,Q,iBCyCAU,E,4MAzDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,mBAAqB,WAKnB,OAJcC,OAAOC,OAAO,EAAKH,OAAOI,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,I,EAKJZ,mBAAqB,WACnB,IAAMD,EAAQ,EAAKQ,qBACnB,OAAOR,EAAQ,EAAIc,KAAKC,MAAO,EAAKR,MAAMV,KAAOG,EAAS,M,EAG5DpB,gBAAkB,SAACoC,GACjB,IAAMC,EAAkBD,EAAME,cAAcC,YAAYC,cACxD,EAAKC,UAAS,SAACC,GAAD,sBACXL,EAAkBK,EAAUL,GAAmB,O,4CAIpD,WACE,IAAMM,EAAkBd,OAAOe,KAAKC,KAAKlB,OACzC,EAA+BkB,KAAKlB,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB2B,EAAaD,KAAKjB,qBAClBP,EAAqBwB,KAAKxB,qBAChC,OACE,sBAAKpB,UAAWC,IAAI6C,KAApB,UACE,cAAC,EAAD,CAASjC,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEf,QAAS4C,EACT3C,gBAAiB6C,KAAK7C,oBAG1B,cAAC,EAAD,CAASc,MAAO,aAAhB,SACGgC,EACC,cAAC,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO0B,EACPzB,mBAAoBA,IAGtB,cAAC,EAAD,CAAcX,QAAQ,+B,GAlDhBsC,a,MCDlBC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba4a46a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__4wdRF\",\"btn\":\"FeedbackOptions_btn__bi5kI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2TSG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"App_card__iDGZf\"};","import PropTypes from \"prop-types\";\r\nimport css from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={css.ontainer}>\r\n      {\" \"}\r\n      {options.map((btnName) => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            key={btnName}\r\n            className={css.btn}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {btnName}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Notification.module.css'\r\n\r\nconst Notification = ({ message }) => <p className={css.text}>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport css from \"./Sections.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <p>Good: {good};</p>\r\n      <p>Neutral: {neutral}; </p>\r\n      <p>Bad: {bad}; </p>\r\n      <p>Total: {total}; </p>\r\n      <p>Positive feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions\";\nimport Notification from \"../notification/Notification\";\nimport Section from \"../section/Section\";\nimport Statistics from \"../statistics/Statistics\";\nimport css from \"./App.module.css\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getStateTotalValue = () => {\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n    return total;\n  };\n\n  positivePercentage = () => {\n    const total = this.getStateTotalValue();\n    return total ? 0 : Math.round((this.state.good / total) * 100);\n  };\n\n  onLeaveFeedback = (event) => {\n    const currentStateKey = event.currentTarget.textContent.toLowerCase();\n    this.setState((prevState) => ({\n      [currentStateKey]: prevState[currentStateKey] + 1,\n    }));\n  };\n\n  render() {\n    const stateKeysForBtn = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const totalValue = this.getStateTotalValue();\n    const positivePercentage = this.positivePercentage();\n    return (\n      <div className={css.card}>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={stateKeysForBtn}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {totalValue ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalValue}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}