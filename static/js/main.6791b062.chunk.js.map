{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/notification/Notification.js","components/section/Section.js","components/statistics/Statistics.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","btnName","type","className","onClick","Notification","message","Section","children","title","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","prototype","PropTypes","number","isRequired","App","state","getStateTotalValue","Object","values","reduce","acc","value","Math","round","event","currentStateKey","currentTarget","textContent","setState","prevState","stateKeysForBtn","keys","this","totalValue","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAsBeA,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAClB,OACE,wBACEC,KAAK,SAELC,UAAU,MACVC,QAASL,EAJX,SAMGE,GAJIA,OCEEI,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCO3BC,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACzB,OACI,qCACI,6BAAKA,EAAMC,gBACVF,M,gBCJPG,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKb,UAAU,YAAf,UACE,sCAASS,EAAT,OACA,yCAAYC,EAAZ,OACA,qCAAQC,EAAR,OACA,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,YAKNL,EAAWM,UAAY,CACnBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBJ,mBAAoBE,IAAUC,OAAOC,YAI1BT,QCwCAU,E,4MAzDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,mBAAqB,WAKnB,OAJcC,OAAOC,OAAO,EAAKH,OAAOI,QACtC,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IACtB,I,EAKJZ,mBAAqB,WACnB,IAAMD,EAAQ,EAAKQ,qBACnB,OAAiB,IAAVR,EAAc,EAAIc,KAAKC,MAAO,EAAKR,MAAMV,KAAOG,EAAS,M,EAGlEhB,gBAAkB,SAACgC,GACjB,IAAMC,EAAkBD,EAAME,cAAcC,YAC5C,EAAKC,UAAS,SAACC,GAAD,sBACXJ,EAAkBI,EAAUJ,GAAmB,O,4CAIpD,WACE,IAAMK,EAAkBb,OAAOc,KAAKC,KAAKjB,OACzC,EAA+BiB,KAAKjB,MAA5BV,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB0B,EAAaD,KAAKhB,qBAClBP,EAAqBuB,KAAKvB,qBAChC,OACE,qCACE,cAAC,EAAD,CAASP,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEX,QAASuC,EACTtC,gBAAiBwC,KAAKxC,oBAG1B,cAAC,EAAD,CAASU,MAAO,aAAhB,SACG+B,EACC,cAAC,EAAD,CACE5B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,EACPxB,mBAAoBA,IAGtB,cAAC,EAAD,CAAcV,QAAQ,+B,GAlDhBmC,a,MCAlBC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6791b062.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((btnName) => {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        key={btnName}\r\n        className=\"btn\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {btnName}\r\n      </button>\r\n    );\r\n  });\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Section = ({ children, title }) => {\r\n    return (\r\n        <>\r\n            <h2>{title.toUpperCase()}</h2>\r\n            {children}\r\n        </>    );\r\n}\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <p>Good:{good} </p>\r\n      <p>Neutral:{neutral} </p>\r\n      <p>Bad:{bad} </p>\r\n      <p>Total: {total} </p>\r\n      <p>Positive feedback: {positivePercentage} %</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.prototype = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n  \r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/feedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/notification/Notification\";\nimport Section from \"./components/section/Section\";\nimport Statistics from \"./components/statistics/Statistics\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getStateTotalValue = () => {\n    const total = Object.values(this.state).reduce(\n      (acc, value) => acc + value,\n      0\n    );\n    return total;\n  };\n\n  positivePercentage = () => {\n    const total = this.getStateTotalValue();\n    return total === 0 ? 0 : Math.round((this.state.good / total) * 100);\n  };\n\n  onLeaveFeedback = (event) => {\n    const currentStateKey = event.currentTarget.textContent;\n    this.setState((prevState) => ({\n      [currentStateKey]: prevState[currentStateKey] + 1,\n    }));\n  };\n\n  render() {\n    const stateKeysForBtn = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n    const totalValue = this.getStateTotalValue();\n    const positivePercentage = this.positivePercentage();\n    return (\n      <>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={stateKeysForBtn}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {totalValue ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalValue}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}